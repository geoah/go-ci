apiVersion: v1
kind: Secret
metadata:
  name: ci
type: Opaque
stringData:
  GITHUB_SECRET: <YOUR-GITHUB-SECRET-HERE>
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ci
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ci
rules:
- apiGroups: ["batch"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["extensions"] 
  resources: ["*"] 
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ci
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ci
subjects:
- kind: ServiceAccount
  name: ci
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ci
  labels:
    app: ci
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: ci
  template:
    metadata:
      labels:
        app: ci
    spec:
      serviceAccountName: ci
      volumes:
      - name: ci-go-cache
        hostPath:
          path: /tmp/ci-go-cache
          type: DirectoryOrCreate
      containers:
      - name: golang
        image: golang:1.12
        ports:
        - containerPort: 8000
          protocol: TCP
          name: http
        env:
        - name: GOMODULE111
          value: "on"
        - name: GOCACHE
          value: /go-cache
        - name: GITHUB_SECRET
          valueFrom:
            secretKeyRef:
              name: ci
              key: GITHUB_SECRET
        volumeMounts:
        - name: ci-go-cache
          mountPath: /go-cache
        command: ["/bin/sh"]
        args: ["-c", "go install https://github.com/geoah/go-ci && go-ci"]
---
apiVersion: v1
kind: Service
metadata:
  name: ci
  labels:
    app: ci
spec:
  ports:
  - port: 8000
    protocol: TCP
    name: http
    targetPort: http
  selector:
    app: ci
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ci
  annotations:
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-ops
spec:
  tls:
  - hosts:
    - ci.nimona.io
    secretName: letsencrypt-ci
  rules:
  - host: ci.nimona.io
    http:
      paths:
      - path: /
        backend:
          serviceName: ci
          servicePort: http
